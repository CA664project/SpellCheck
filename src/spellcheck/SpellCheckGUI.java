package spellcheck;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.NoSuchElementException;
import javax.swing.JFileChooser;

/** The {@code SpellCheckGUI} allows the user to select a 
 * text file on their computer and correct each spelling error
 * from a selection of suggested words.
 * The resulting output can then be saved to a new file. 
 *
 * @author Amy, Cian, Shaun
 */
public class SpellCheckGUI extends javax.swing.JFrame {
    

    private String filename;
    private ArrayList<String> words;
    private Iterator<String> textIter;

    /**
     * Generates the UI with a blank suggested words list with 5 as a default 
     * number of suggestions
     */
    public SpellCheckGUI() {
        
        initComponents();
        suggestedWords.removeAllItems();
        suggestionNo.setValue(SpellChecker.suggestions);
    }

    /**
     * This code is generated by the form editor
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        OpenFile = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        DisplayBox = new javax.swing.JTextPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        ResultBox = new javax.swing.JTextPane();
        Correct = new javax.swing.JButton();
        suggestedWords = new javax.swing.JComboBox();
        select = new javax.swing.JButton();
        saveFile = new javax.swing.JButton();
        suggestionNo = new javax.swing.JSpinner();
        setSuggNo = new javax.swing.JButton();
        currentWord = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        OpenFile.setText("Open a Text File");
        OpenFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenFileActionPerformed(evt);
            }
        });

        DisplayBox.setEditable(false);
        jScrollPane1.setViewportView(DisplayBox);

        ResultBox.setEditable(false);
        jScrollPane2.setViewportView(ResultBox);

        Correct.setText("Correct");
        Correct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CorrectActionPerformed(evt);
            }
        });

        suggestedWords.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        select.setText("Replace");
        select.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectActionPerformed(evt);
            }
        });

        saveFile.setText("Save Output");
        saveFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveFileActionPerformed(evt);
            }
        });

        setSuggNo.setText("No. Suggestions");
        setSuggNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setSuggNoActionPerformed(evt);
            }
        });

        currentWord.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        currentWord.setText("Current Word");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(OpenFile)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 306, Short.MAX_VALUE)
                .addComponent(Correct)
                .addGap(60, 60, 60))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(setSuggNo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(suggestionNo, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(currentWord, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(suggestedWords, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(saveFile)
                                    .addComponent(select, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OpenFile)
                    .addComponent(Correct))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(currentWord)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(suggestedWords, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(select)
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(suggestionNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(setSuggNo))
                        .addGap(35, 35, 35)
                        .addComponent(saveFile))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void OpenFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenFileActionPerformed
        JFileChooser choose = new JFileChooser();
        int failure = choose.showOpenDialog(SpellCheckGUI.this);
        if(failure == 0){
            File file = choose.getSelectedFile();
            filename = file.getAbsolutePath();
            words = SpellChecker.getText(filename);
            String text = "";
            for(String word : words){
                text = text + " " + word;
            }
            DisplayBox.setText(text);  
        }


    }//GEN-LAST:event_OpenFileActionPerformed

    private void CorrectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CorrectActionPerformed
        ResultBox.setText("");
        try{
            this.textIter = words.iterator();
            correctNext(textIter.next());    
        } catch (NullPointerException | NoSuchElementException e){
            ResultBox.setText("No text.");
            System.out.println("No text.");
        } 
    }//GEN-LAST:event_CorrectActionPerformed

    private void selectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectActionPerformed
        ResultBox.setText(ResultBox.getText() + suggestedWords.getSelectedItem() + " ");
        try{
            if(textIter.hasNext()){            
                correctNext(textIter.next());
            } else {
                currentWord.removeAll();
                suggestedWords.removeAllItems();
            }  
        } catch (NullPointerException e){
            System.out.println("Nothing to correct.");
        }
        
        /*if(suggestedWords.getItemCount() > 0){
            correctNext(suggestedWords.getSelectedItem().toString());
        }*/
        
    }//GEN-LAST:event_selectActionPerformed

    private void saveFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveFileActionPerformed
        JFileChooser save = new JFileChooser();
        int check = save.showSaveDialog(SpellCheckGUI.this);
        if(check == 0){
            File file = save.getSelectedFile();
            try(BufferedWriter bw = new BufferedWriter(new FileWriter(file.getAbsolutePath()))){
                bw.write(ResultBox.getText());  
                bw.close();
            } catch(IOException e){
                System.out.println("Could not save file");
            }   
        }

    }//GEN-LAST:event_saveFileActionPerformed

    private void setSuggNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setSuggNoActionPerformed
        try{
            correctNext(suggestedWords.getItemAt(suggestedWords.getItemCount() - 1).toString());
        } catch (NullPointerException e){
            System.out.println("Nothing to correct.");
        }
    }//GEN-LAST:event_setSuggNoActionPerformed

    private void correctNext(String word){
        currentWord.setText(word);
        List<String> suggWords;
        
        if(!SpellChecker.inDictionary(word)){
            suggWords = SpellChecker.spellCheck(word, (int) suggestionNo.getValue());
            suggestedWords.removeAllItems();
            for(String entry : suggWords){
                suggestedWords.addItem(entry);
            }            
        } else {
            ResultBox.setText(ResultBox.getText() + word + " ");
            if(textIter.hasNext()){                
                correctNext(textIter.next());
            } else { 
                currentWord.removeAll();
                suggestedWords.removeAllItems();
            }            
        }       
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SpellCheckGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SpellCheckGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SpellCheckGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SpellCheckGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new SpellCheckGUI().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Correct;
    private javax.swing.JTextPane DisplayBox;
    private javax.swing.JButton OpenFile;
    private javax.swing.JTextPane ResultBox;
    private javax.swing.JLabel currentWord;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton saveFile;
    private javax.swing.JButton select;
    private javax.swing.JButton setSuggNo;
    private javax.swing.JComboBox suggestedWords;
    private javax.swing.JSpinner suggestionNo;
    // End of variables declaration//GEN-END:variables
}
